import type { GLClearColorType } from './public/types.ts'
<template>
  <style></style>
  <h1>Studies for WebGL</h1>
  <hr />
  <canvas ref="canvases" />
</template>
<proto type="app" base="./public">
  declare:
    getWebGLContext(canvas: HTMLCanvasElement): WebGLRenderingContext | WebGL2RenderingContext | never {
        // need to get the correct webgl context
      const gl = canvas.getContext('webgl2')
        || canvas.getContext('webgl')
        || canvas.getContext('experimental-webgl');
      console.warn(canvas, gl);
      if (gl && (gl instanceof WebGLRenderingContext || gl instanceof WebGL2RenderingContext)) {
        console.log('Ogone - WebGL context retrieved');
      } else {
        throw new Error('Ogone is not able to get WebGL context, your browser or device may not support WebGL.')
      }
      return gl;
    }
    clearWithColor(gl: WebGLRenderingContext | WebGL2RenderingContext, color: GLClearColorType): void {
      // set the color of the background
      // a VXComponent can provide it with the attribute background
      //             R  G  B  A
      // @ts-ignore
      gl.clearColor(...color);
      // apply the clear color to get the result
      gl.clear(gl.COLOR_BUFFER_BIT);
    }
  before-each:
    const [canvas] = Refs.canvases;
    const BACKGROUND_COLOR: GLClearColorType = [0, 0, 0, 0.2];
  default:
    const gl = this.getWebGLContext(canvas as unknown as HTMLCanvasElement);
    this.clearWithColor(gl, BACKGROUND_COLOR);
    break;
</proto>