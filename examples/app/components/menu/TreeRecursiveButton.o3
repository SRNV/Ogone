import component ScrollComponent from '@/examples/app/components/Scroll.o3';
import type { TreeRecursive } from '../../public/modules/tree-recursive-types.ts';

<template>
  <style>
    .container {
      color: var(--o-grey);
      display: flex;
      flex-direction: column;
      flex: 1;
    }
    .child {
      padding-left: 30px;
      height: 0;
      overflow: hidden;
      transition: flex 0.5s ease;
    }
    .child-open {
      flex: 1;
    }
    .title {
      padding-bottom: 10px;
      padding: 5px;
      cursor: pointer;
      flex: 1;
      display: flex;
      justify-content: space-between;
      &:hover {
        background: var(--o-primary);
        color: white;
      }
    }
    .child .title {
      border-left: 1px solid #555;
    }
    .status {
      display: list-item;
    }
    .ok {
      color: var(--o-success)
    }
    .todo {
      color: var(--o-error)
    }
    .in-progress {
      color: var(--o-info)
    }
  </style>
  <div class="container">
    <div
      class="title"
      --click:toggle
      --router-go={this.item.route}>
      <span>
        ${this.item.name}
      </span>
      <span --class={!this.item.children && this.item.status ? `status ${this.item.status}` : ''}>
        ${!this.item.children && this.item.status ? this.item.status : ''}
      </span>
      <span --if={this.item.children && !this.openTree}> > </span>
      <span --else-if={this.item.children && this.openTree}> < </span>
    </div>
    <div
      class="child"
      --if={this.item.children}
      --class={{ 'child-open': this.openTree }}>
      <ScrollComponent>
        <Self
          --for={child of this.item.children}
          item={child} />
      </ScrollComponent>
    </div>
  </div>
</template>

<proto>
  declare:
    public openTree: boolean = false;
    public inp: string = this.openTree ? 'open' : 'closed';
    public inherit item: TreeRecursive = { name: 'no name', route: '', status: 'todo', children: []};
  case 'click:toggle':
    this.openTree = !this.openTree;
    this.inp = this.openTree ? 'open' : 'closed';
    break;
</proto>


