import component AsyncLiMenu from '../atoms/li-menu.o3';

component <LeftMenu>
  <template>
    <style>
      hr {
        opacity: 0.4;
        border-width: thick;
      }
      .logo {
        width: 40%;
        filter: grayscale(1) brightness(1.5);
      }
      .container {
        filter: drop-shadow(-6px 4px 6px black);
        background: linear-gradient(0deg, #f9f9f9, white);
        border-right: 1px solid #e8e8e8;
        height: 100%;
        z-index: 400;
        position: relative;
      }
      .fade-in-slide-in-left {
        @keyframes fade-in-slide-in-left {
          animation-iteration-count: 1;
          animation-direction: normal;
          animation-fill-mode: forwards;
          animation-duration: 1.5s;

          position: relative;
          opacity: 0   | 1;
          left: -500px | 0px;
        }
      }
    </style>
    <div class="container fade-in-slide-in-left">
      <div
        class="header"
        --router-go={'/'}>
        <img --await class="logo" src="https://raw.githubusercontent.com/SRNV/Ogone/feat/use-deno-bundle/fix-types/one-ogone-browser-and-deno/src/public/ogone.svg"/>
      </div>
      <hr />
      <ul>
        <AsyncLiMenu
          --for={(item, i) of this.links}
          --defer={new Promise((resolve) => setTimeout(resolve, 500 * (i+1)))}
          item={item}>
        </AsyncLiMenu>
      </ul>
    </div>
  </template>
  <proto type="async">
    declare:
      public interval?: number;
      public readonly links: ({label: string; route: string; children: any[] })[] = [
        { label: 'Ogone', route: '/ogone', children: []},
      ];
    default:
      this.interval = setInterval(() => {
        this.links.push({ label: 'Test Reactive Array', route: '/ogone/test', children: [
          { label: 'Ogone', route: '/ogone', children: []},
        ]})
      }, 1000);
      Async.resolve();
    case 'destroy':
      clearInterval(this.interval);
      break;
  </proto>
</LeftMenu>