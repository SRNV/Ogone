require item as Object

use @/newapp/main/tree-recursive-button.o3 as 'tree-recursive'


<div class="container">
  <div class="title" --click:toggle --router-go="item.route">
    <span>
     ${item.name}
    </span>
    <span --class="!item.children && item.status ? `status ${item.status}` : ''"></span>
    <span --if="item.children && !openTree"> > </span>
    <span --else-if="item.children && openTree"> < </span>
  </div>
  <div class="child" --if="item.children" --class="{ 'child-open': openTree }">
    <tree-recursive
      --if="!!item.children"
      --for="item.children as (child)"
      :item="child ? child : {}"></tree-recursive>
  </div>
</div>
<proto>
  def:
    openTree: false
  case 'click:toggle':
    this.openTree = !this.openTree
  break;
</proto>
<style>
.container {
  color: var(--o-grey);
  display: flex;
  flex-direction: column;
  flex: 1;
}
.child {
  padding-left: 30px;
  height: 0;
  overflow: hidden;
  transition: flex 0.5s ease;
  background: #00000034;
}
.child-open {
  flex: 1;
}
.title {
  padding-bottom: 10px;
  border-bottom: 1px solid #555;
  padding: 5px;
  cursor: pointer;
  flex: 1;
  display: flex;
  justify-content: space-between;
}
.title:hover {
  background: var(--o-primary);
  color: white;
}
.status {
  display: list-item;
}
.ok {
  color: var(--o-success)
}
.todo {
  color: var(--o-error)
}
.in-progress {
  color: var(--o-info)
}
</style>